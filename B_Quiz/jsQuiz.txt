Q1:
undefined
8
8
8
10
1

Q2:
var a=10;
function x(){
	var b=100;
}

Q3:
3. Consider the following structure of Javascript code:
// Scope A
function XFunc () {
// Scope B
function YFunc () {
// Scope C
};
};
(a) Do statements in Scope A have access to variables defined in Scope B and C?
No
(b) Do statements in Scope B have access to variables defined in Scope A?
Yes
(c) Do statements in Scope B have access to variables defined in Scope C?
No
(d) Do statements in Scope C have access to variables defined in Scope A?
Yes
(e) Do statements in Scope C have access to variables defined in Scope B?
yes

4. What will be printed by the following (answer without running it)?
var x = 9;
function myFunction() {
return x * x;
}
document.write(myFunction());
x = 5;
document.write(myFunction());

Ans:
81
25

5.
var foo = 1;
function bar() {
if (!foo) {
var foo = 10;
}
alert(foo);
}
bar();

Ans:
alert 10. 
Scopes are not created by For or While loops or expression statements like if or switch

6. Consider the following definition of an add( ) function to increment a counter variable:
var add = (function () {
var counter = 0;
return function () {
return counter += 1;
}
 })();
Modify the above module to define a count object with two methods: add( ) and reset( ). The count.add( ) method
adds one to the counter (as above). The count.reset( ) method sets the counter to 0.
Ans:
6. Consider the following definition of an add( ) function to increment a counter variable:
var add = (function () {
var counter = 0;
return function () {
return counter += 1;
}
 })();
Modify the above module to define a count object with two methods: add( ) and reset( ). The count.add( ) method
adds one to the counter (as above). The count.reset( ) method sets the counter to 0.
